--------------------------------------------------------------------------------

dir:
  1-development/3-web-app-react-frontend/02-dev/src/redux
grep search pattern:
  actions\.(?:OPEN_FOLDER|OPEN_THREAD|OPEN_COMPOSE_MESSAGE|DEBUG|GENERATE_KEYPAIR|SAVE_DRAFT_MESSAGE|CLEAR_DRAFT_MESSAGE|SEND_NEW_MESSAGE|SEND_REPLY)
type:
  regex
assertion:
  0 matches
description:
  action aliases are only valid in React components (via context)

--------------------------------------------------------------------------------

dir:
  1-development/3-web-app-react-frontend/02-dev/src/react
grep search pattern:
  actions\.(?!OPEN_FOLDER|OPEN_THREAD|OPEN_COMPOSE_MESSAGE|DEBUG|GENERATE_KEYPAIR|SAVE_DRAFT_MESSAGE|CLEAR_DRAFT_MESSAGE|SEND_NEW_MESSAGE|SEND_REPLY|UPDATE_SETTINGS|UPDATE_THREAD|UPDATE_MESSAGE)
type:
  regex
assertion:
  0 matches
description:
  only action aliases are valid in React components (via context)
note:
  negative lookahead assertion will only match actions that are NOT in whitelist

--------------------------------------------------------------------------------

// =====================================
// purpose:
//  * update mock server-side data to emulate a new email thread received in "inbox"
// =====================================
// usage:
//  * open "inbox" folder
//      file://../1-development/3-web-app-react-frontend/02-dev/dist/index.html
//  * open the javascript console
//  * select the window:
//      top
//  * run the following script..
//  * click the "refresh" icon
// =====================================

const update_inbox = () => {
  let inbox         = mock_data.threads_in_folder.inbox
  let old_thread_id = inbox[inbox.length - 1]
  let new_thread_id = `${old_thread_id}.1`
  let old_thread    = mock_data.threads[old_thread_id]
  let new_thread    = {
    summary:      {...old_thread.summary},
    settings:     {...old_thread.settings, unread: true},
    messages:     [...old_thread.messages],
    participants: [...old_thread.participants]
  }

  inbox.unshift(new_thread_id)

  mock_data.threads[new_thread_id] = new_thread
  mock_data.folders[0].unread_count++
}

update_inbox()

--------------------------------------------------------------------------------

// =====================================
// purpose:
//  * query and display real server-side data
// =====================================
// usage:
//  * open "inbox" folder
//      https://script.google.com/macros/s/AKfycbxjGr_DXhEsXfQxDtKII3LkCEGC5zgsQcdx4DJNWJitkyx8FLZV/exec
//  * open the javascript console
//  * select the window:
//      top > sandboxFrame > userHtmlFrame
//  * run the following script(s):
// =====================================

const active_email_address = window.init_data.email_address

google.script.run.withSuccessHandler(console.log).get_folders(active_email_address)

google.script.run.withSuccessHandler(console.log).get_threads_in_folder(active_email_address, 'inbox', 0, 0, 10)

let thread_ids = {
  "unencrypted w/o attachment": "167115dc1b737d3f",
  "unencrypted w/ attachment":  "1670ebd4888d5bf2",
  "encrypted w/ attachment":    "1670eb635f2f2a6f"
}

google.script.run.withSuccessHandler(console.log).get_thread( active_email_address, thread_ids["unencrypted w/o attachment"] )
google.script.run.withSuccessHandler(console.log).get_thread( active_email_address, thread_ids["unencrypted w/ attachment"] )
google.script.run.withSuccessHandler(console.log).get_thread( active_email_address, thread_ids["encrypted w/ attachment"] )

google.script.run.withSuccessHandler(console.log).get_public_keys(active_email_address, [active_email_address])

--------------------------------------------------------------------------------

// =====================================
// purpose:
//  * log error that occurs when Google account is modified (out-of-band)
// =====================================
// usage:
//  * open "inbox" folder
//      https://script.google.com/macros/s/AKfycbxjGr_DXhEsXfQxDtKII3LkCEGC5zgsQcdx4DJNWJitkyx8FLZV/exec
//  * open the javascript console
//  * select the window:
//      top > sandboxFrame > userHtmlFrame
//  * run the following script(s):
// =====================================

const active_email_address = 'mismatch_' + window.init_data.email_address

const onFailure = (error) => {
  console.log('typeof error:', (typeof error))
  console.log('toJSON:', JSON.stringify(error, null, 4))
  console.log('raw:', {error})
}

google.script.run.withFailureHandler(onFailure).withSuccessHandler(console.log).get_folders(active_email_address)

--------------------------------------------------------------------------------

// =====================================
// development account:
// =====================================

https://secure-webmail.github.io/?env=test
https://secure-webmail.github.io/?env=test&debug=1
https://secure-webmail.github.io/?env=test&debug=1&tid=1670eb635f2f2a6f

// =====================================
// production account:
//   -> currently displays a 503 (service unavailable) status response message
// =====================================

https://secure-webmail.github.io/?debug=1
https://secure-webmail.github.io/?debug=1&tid=1670eb635f2f2a6f

--------------------------------------------------------------------------------
